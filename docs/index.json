[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "scripts/engine.js",
    "content": "\"use strict\"\n/***\n * Classes and logic for the Wheel of Jeopardy (WOJ) game.\n */\n\n\n/**\n * Returns a random integer between min and max.\n * @param {number} max upper bound (exclusive).\n * @param {number} min lower bound (inclusive).\n * @returns {number} random integer.\n */\nfunction randomInt(max, min=0) {\n    return Math.floor(Math.random() * (max - min) + min);\n}\n\n/**\n * Naive shuffle an array, swaps random slots 3 * array.length times.\n * @param {Object[]} arr an array to shuffle.\n * @returns {Object[]} shuffled array.\n */\nfunction shuffleArray(arr){\n    for (let j=0; j < arr.length * 3; j++){\n        let i1 = randomInt(arr.length);\n        let i2 = randomInt(arr.length);\n\n        let val1 = arr[i1];\n        let val2 = arr[i2];\n\n        arr[i2] = val1;\n        arr[i1] = val2;\n    }\n    return arr;\n}\n\n/**\n * A single clue, zero indexed from the top left of the board.\n */\nclass Clue {\n    /**\n     * @param {number} column horizontal index on board.\n     * @param {number} row vertical index on board.\n     * @param {string} question the question text.\n     * @param {string} answer the answer text.\n     */\n    constructor(column, row, question, answer) {\n        this.column = column;\n        this.row = row;\n        this.question = question;\n        this.answer = answer;\n\n        /** @type {number} value of the clue. */\n        this.points = 0;\n    }\n}\n\n/** \n * A category of clues on the board. \n */\nclass Category{\n    /**\n     * @param {string} name name of the category.\n     */\n    constructor(name){\n        this.name = name;\n\n        /** @type {Object[]} a list of {@link Clue} objects. */\n        this.clues = [];\n\n        /** \n         * @type {number} number of clues in the category that have been \n         * answered. \n         */\n        this.cluesAnswered = 0;\n    }\n\n    /** @type {boolean} true if all clues in the category have been answered. */\n    get complete(){\n        return this.cluesAnswered >= this.clues.length;\n    }\n\n    /** \n     * Reset clues answered count to 0.\n     */\n    reset(){\n        this.cluesAnswered = 0;\n    }\n\n    /** \n     * Retrieve next unanswered clue in the category, increment cluesAnswered.\n     * If all clues are answered, this will return undefined.\n     * @return {clue} the next unanswered clue.\n     */\n    nextClue(){\n        let clue = this.clues[this.cluesAnswered];\n        this.cluesAnswered++;\n        return clue;\n    }\n}\n\n/**\n * A WOJ board with column * row clues arranged in a grid. The top left\n * corner is indexed at 0. Each column is a {@link Category} and each row in a \n * category is a {@link Clue}. All categories must have the same number of \n * clues. Each clue in the first row has {@link Board#basePoints}. Each clue in\n * the next row equals the sum of the clue value in the prior row plus \n * basePoints.\n */\nclass Board {\n    /**\n     * @param {number} [columns=6] number of columns on the board. \n     * @param {number} [rows=5] number of rows on the board.\n     * @param {number} [basePoints=200] point value of each clues in the first \n     * row.\n     */\n    constructor(columns=6, rows=5, basePoints=200) {\n        this.columns;\n        this.rows;\n        this.basePoints = basePoints;\n\n        /** \n         * @type {Category[]} an array of Categories indexed by column \n         * position. \n         */\n        this.categories;\n\n        /** \n         * @type {number} number of clues on the board that have been \n         * answered.\n         */\n        this.cluesAnswered = 0;\n\n        this.init_(columns, rows);\n    }\n\n    /** @type {boolean} true if all clues on the board have been answered. */\n    get complete(){\n        return this.cluesAnswered >= this.columns * this.rows;\n    }\n\n    /**\n     *  @type {string[]} an array of category names indexed by column position.\n     */\n    get categoryNames(){\n        let names = [];\n        for(let i=0; i<this.categories.length; i++){\n            names.push(this.categories[i].name);\n        }\n        return names;\n    }\n\n    /**\n     * Initializes an empty board of size columns * rows with {@link Clue}'s.\n     * @private\n     * @param {number} columns number of columns on the board. \n     * @param {number} rows number of rows on the board.\n     */\n    init_(columns, rows){\n        this.categories = [];\n        this.columns = columns;\n        this.rows = rows;\n\n        for(let i=0; i<this.columns; i++){\n            let category = new Category();\n            this.categories.push(category);\n\n            for(let j=0; j<this.rows; j++){\n                let clue = new Clue();\n                clue.column = i;\n                clue.row = j;\n                clue.points = (j+1) * this.basePoints;\n                category.clues.push(clue);\n            }\n        }\n    }\n\n    /** \n     * Resets each category in the board and sets cluesAnswered count to 0.\n     */\n    reset(){\n        this.cluesAnswered = 0;\n        for(let i=0; i<this.categories.length; i++){\n            this.categories[i].reset();\n        }\n    }\n\n    /**\n     * Returns a category at the specified column.\n     * @param {number} column column index of the category.\n     * @return {Category} category at the specified column.\n     */\n    getCategory(column){\n        return this.categories[column];\n    }\n\n    /**\n     * Returns a clue at the specified column and row.\n     * @param {number} column column index of the clue.\n     * @param {number} row row index of the clue.\n     * @return {Clue} clue at the specified column and row.\n     */\n    getClue(column, row){\n        return this.categories[column].clues[row];\n    }\n\n    /**\n     * Edit the name of a category at column index.\n     * @param {number} column column index of the category.\n     * @param {string} name new category name.\n     */\n    editCategory(column, name){\n        let category = this.getCategory(column);\n        category.name = name;\n    }\n\n    /**\n     * Edit the question and answer of a clue at column and row index.\n     * @param {number} column column index of the clue.\n     * @param {number} row row index of the clue.\n     * @param {string} question new question text.\n     * @param {string} answer new answer text.\n     */\n    editClue(column, row, question, answer){\n        let clue = this.getClue(column, row);\n        clue.question = question;\n        clue.answer = answer;\n    }\n\n    /** \n     * Retrieve next unanswered clue in the category at column and increment\n     * cluesAnswered. If all clues are answered, this will return undefined.\n     * @param {number} column column index of the category.\n     * @return {clue} the next unanswered clue.\n     */\n    nextClue(column) {\n        if (!this.categoryComplete(column)){\n            this.cluesAnswered++;\n            let category = this.getCategory(column);\n            let clue = category.nextClue();\n            return clue;\n        }\n    }\n\n    /**\n     * Import JSON board, initializing board and setting categories and clues.\n     * Data should be a string. Use JSON.stringify if data is an object literal.\n     * \n     * @param {string} data board JSON.\n     * @param {number} data.columns number of columns.\n     * @param {numnber} data.rows number of rows.\n     * @param {string[]} data.categories array of category names.\n     * @param {Object[]} data.clues array of clues, zero indexed from top left\n     * of board\n     * @param {number} data.clues.column column index of the clue.\n     * @param {number} data.clues.row row index of the clue.\n     * @param {string} data.clues.question new question text.\n     * @param {string} data.clues.answer new answer text.\n     * \n     * @see /scripts/data.js\n     */\n    import(data){\n        data = JSON.parse(data);\n\n        // reinitialize board if columns/rows different\n        if(this.columns != data.columns || this.rows != data.rows){\n            this.init_(data.columns, data.rows);\n        }\n\n        // import category names\n        for(let i=0; i<data.categories.length; i++){\n            this.editCategory(i, data.categories[i]);\n        }\n\n        // import clues\n        for(let i=0; i<data.clues.length; i++){\n            let clue = data.clues[i];\n            this.editClue(clue.column, clue.row, clue.question, clue.answer);\n        }\n    }\n\n    /**\n     * Export board content to JSON board string. See {@link Board.import} for\n     * details on JSON board structure.\n     * @returns {string} serialized board.\n     */\n    export(){\n        let data = {\n            \"columns\": this.columns,\n            \"rows\": this.rows,\n            \"categories\": this.categoryNames,\n            \"clues\": []\n        };\n\n        for(let i=0; i<this.columns; i++){\n            for(let j=0; j<this.rows; j++){\n                let clue = this.getClue(i, j);\n                data.clues.push({\n                    \"column\": i,\n                    \"row\": j,\n                    \"question\": clue.question,\n                    \"answer\": clue.answer\n                })\n            }\n        }\n\n        data = JSON.stringify(data);\n        return data;\n    }\n}\n\n/** Result of a wheel spin. */\nclass Spin {\n    /**\n     * @param {number} slot wheel slot number where spin landed.\n     * @param {number} sectorNumber corresponding sector number located at slot.\n     * @param {string} sectorName corresponding sector name located at slot.\n     * @param {boolean} isCategory true if sector is category.\n     * @param {Clue} clue if isCategory is true and spinAgain is false, next\n     * clue in the category.\n     */\n    constructor(slot, sectorNumber, sectorName, isCategory, clue){\n        this.slot = slot;\n        this.sectorNumber = sectorNumber;\n        this.sectorName = sectorName;\n        this.isCategory = isCategory;\n        this.clue = clue;\n\n        /**\n         * @type {boolean} true if category is complete.\n         */\n        this.spinAgain = false;\n    }\n}\n\n/** \n * A WOJ wheel for a specific board and maximum spins. The number of slots on\n * the wheel will be the number of categories + the number of special sectors\n * (6). Slots are fixed on the wheel. Each special and category is a sector.\n * Each sector can be randomly assigned to a slot on the wheel. Categories are\n * always populated in the sector list first, followed by special sectors, i.e.\n * category 0 on the board is always sector 0 on the wheel.\n */\nclass Wheel {\n    /**\n     * @param {Board} board an initialized WOJ board.\n     * @param {number} [maxSpins=50] the max spins allowed.\n     */\n    constructor(board, maxSpins=50) {\n        this.board = board;\n        this.maxSpins = maxSpins;\n\n        /**\n         * @type {string[]} a list of six special sectors.\n         */\n        this.specialSectors = [\n            \"Lose Turn\", \n            \"Free Turn\", \n            \"Bankrupt\", \n            \"Player's Choice\", \n            \"Opponent's Choice\", \n            \"Double Score\"\n        ]\n\n        /**\n         * @type {number} number of spins used.\n         */\n        this.usedSpins = 0;\n\n        /**\n         * @type {number} sector numbers in each slot.\n         */\n        this.slots = [];\n\n        this.assignSectors();\n    }\n\n    /** @type {boolean} true if all spins have been used. */\n    get complete(){\n        return this.usedSpins >= this.maxSpins;\n    }\n\n    /**\n     * @type {string[]} array of ordered sector names: categories + special\n     * sectors.\n     */\n    get sectors(){\n        return this.board.categoryNames.concat(this.specialSectors);\n    }\n\n    /** \n     * Resets used spins to 0.\n     */\n    reset(){\n        this.usedSpins = 0;\n    }\n\n    /**\n     * Assigns sectors numbers to each slot ordered by categories then special.\n     */\n    assignSectors(){\n        this.slots = [];\n\n        for(let i=0; i<this.sectors.length; i++){\n            this.slots.push(i);\n        }\n    }\n\n    /**\n     * Randomizes sectors in the slots.\n     */\n    randomizeSectors(){\n        this.slots = shuffleArray(this.slots);\n    }\n\n    /**\n     * Get sector number at a specific slot number.\n     * @param {number} slot slot number in the wheel.\n     * @return {number} sector number at the specified slot.\n     */\n    getSectorNumber(slot){\n        return this.slots[slot];\n    }\n\n    /**\n     * Get sector name for the specific sector number.\n     * @param {number} sectorNumber sector number.\n     * @return {number} sector name for the sector number.\n     */\n    getSectorName(sectorNumber){\n        return this.sectors[sectorNumber];\n    }\n\n    /**\n     * Check if the sector is a category (vs a special sector).\n     * @param {number} sectorNumber number of the sector.\n     * @return {boolean} true if the sector is a category.\n     */\n    sectorIsCategory(sectorNumber){\n        if(sectorNumber < this.board.categoryNames.length){\n            return true\n        } else {\n            return false\n        }\n    }\n\n    /**\n     * Return a random slot number from the wheel.\n     * @returns {number} a random slot number.\n     */\n    getRandomSlot(){\n        return randomInt(this.slots.length);\n    }\n\n    /**\n     * Spins the wheel and returns a random sector. Populates the {@link Spin}\n     * object with the spin results and depending on the outcome, adjusts points\n     * or retrieves the next clue.\n     * @returns {Spin} object summarizing result of the spin.\n     */\n    spin(){\n        let spin = new Spin();\n        spin.slot = this.getRandomSlot();\n        spin.sectorNumber = this.getSectorNumber(spin.slot);\n        spin.sectorName = this.getSectorName(spin.sectorNumber);\n        spin.isCategory = this.sectorIsCategory(spin.sectorNumber);\n\n        if(spin.isCategory){\n            let category = this.board.getCategory(spin.sectorNumber);\n    \n            if(category.complete){\n                spin.spinAgain = true;\n            } else {\n                let clue = category.nextClue();\n                spin.clue = clue;\n            }\n        }\n        this.usedSpins++;\n        return spin;\n    }\n}\n\n/**\n * A score keeper for a single player and round.\n */\nclass Score {\n    constructor(){\n        /** \n         * @type {number} current points for the round. \n         */\n        this.points = 0;\n    }\n\n    /** Reset points to 0. */\n    reset(){\n        this.points = 0;\n    }\n\n    /**\n     * Increase points by a number (sign ignored).\n     * @param {number} points number of points to increase.\n     */\n    increase(points){\n        this.points = this.points + Math.abs(points);\n    }\n\n    /**\n     * Decrease points by a number (sign ignored).\n     * @param {number} points number of points to decrease.\n     */\n    decrease(points){\n        this.points = this.points - Math.abs(points);\n    }\n\n    /** If points are positive, set points to 0. */\n    bankrupt(){\n        if(this.points > 0){ this.points = 0; }\n    }\n\n    /** Double points, even if negative. */\n    double(){\n        this.points = this.points + this.points;\n    }\n}\n\n/**\n * A player in the WOJ game.\n */\nclass Player {\n    /**\n     * @param {string} [name] the players name.\n     */\n    constructor(name) {\n        this.name = name;\n\n        /**\n         * @type {number} number of tokens (free turns).\n         */\n        this.tokens = 0;\n\n        /**\n         * @type {Score[]} array of scores, indexed by round number, i.e. 0 is\n         * the first round.\n         */\n        this.scores = [];\n    }\n\n    /** @type {numbner} sum of points for all rounds. */\n    get totalScore(){\n        let points = 0;\n        for(i=0; i<this.scores.length; i++){\n            points += this.scores[i].points;\n        }\n        return points;\n    }\n\n    /** Sets the player's tokens to 0. */\n    resetTokens(){\n        this.tokens = 0;\n    }\n\n    /**\n     *  Reset score for round to 0.\n     * @param {number} round number of the round, 0 is round 1.\n     */\n    resetScore(round){\n        this.scores[round] = new Score();\n    }\n\n    /**\n     * Return the score for a given round number.\n     * @param {number} round number of the round, 0 is round 1.\n     * @returns {number} score for the given round number.\n     */\n    getScore(round){\n        return this.scores[round];\n    }\n\n    /**\n     * Adds 1 token to the player's tokens.\n     */\n    addToken(){\n        this.tokens += 1;\n    }\n\n    /**\n     * Checks if the player has any tokens.\n     * @returns true if the player has at least one token.\n     */\n    hasToken(){\n        return this.tokens > 0;\n    }\n\n    /**\n     * Deduct a token, if the player has one.\n     * @returns {boolean} false if the player does not have a token to use.\n     */\n    useToken(){\n        if(this.hasToken){\n            this.tokens--;\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\n/**\n * A round in the WOJ game. The standard game is played with two rounds. The\n * round ID must be unique and is used to store and access the round in the\n * games round list.\n * @todo fix round id so it is auto-assigned / inked to array index.\n */\nclass Round {\n    /**\n     * @param {number} id A unique numeric ID for the round.\n     * @param {Wheel} wheel a wheel for the round.\n     * @param {Player[]} players an array of players in the game.\n     * @param {number} [maxTime=20] maximum time to answer a question in\n     * seconds.\n     */\n    constructor(id, wheel, players, maxTime=20){\n        this.id = id;\n        this.wheel = wheel;\n        this.players = players;\n        this.maxTime = maxTime;\n\n        /**\n         * @type {Board} a board for the round.\n         */\n        this.board = wheel.board;\n\n        /**\n         * @type {number} player id of the player currently spinning.\n         */\n        this.currentPlayer = 0\n    }\n\n    /** @type {boolean} true if the round is complete. */\n    get complete(){\n        return this.wheel.complete || this.board.complete\n    }\n\n    /**\n     * Start the WOJ round.\n     */\n    start(){\n        this.reset();\n    }\n\n    /**\n     * Resets the current round by reseting the wheel, board, and player scores.\n     */\n    reset(){\n        this.wheel.reset();\n        this.board.reset();\n        for(let i=0; i<this.players.length; i++){\n            this.players[i].resetScore(this.id);\n        }\n        this.currentPlayer = 0;\n    }\n}\n\n/**\n * The WOJ game. Supports creation of board, wheel, and players which are\n * used to track game play. This class should be used to create games and add\n * rounds to ensure proper functionality.\n * \n * @example\n * let game = new Game();\n * \n * // create default boards\n * let data = [data1, data2];\n * \n * for(let i=0; i<data.length; i++){\n *      let round = game.addRound();\n *      round.board.import(JSON.stringify(data[i]));\n *      round.wheel.assignSectors();\n *      round.wheel.randomizeSectors();    \n * }\n * \n * // edit board content if needed\n * round = game.getRound(0);\n * let clue = round.board.getCategory(1).clues[2];\n * clue.question = \"What is the oldest soft drink in America?\";\n * clue.answer = \"Dr. Pepper.\";\n * \n * // start game\n * game.addPlayer(\"John\");\n * game.addPlayer(\"Jane\");\n * \n * // start first round\n * round = game.getRound(0);\n * round.start();\n * \n * // player spins\n * console.log(round.currentPlayer);\n * let spin = round.wheel.spin();\n * console.log(spin);\n * console.log(round.complete);\n */\nclass Game {\n    constructor() {\n        /** @type {Player[]} array of players. */\n        this.players = [];\n\n        /** @type {Rounds[]} array of rounds. */\n        this.rounds = [];\n\n        /** @type {number} current round number. */\n        this.currentRound = 0;\n    }\n\n    /** \n     * Add a player to the game\n     * @param {string} name the players name.\n     */\n    addPlayer(name){\n        let player = new Player(name);\n        this.players.push(player);\n    }\n\n    /**\n     * Retrieve a player.\n     * @param {number} id the players id number, player one is id: 0.\n     * @returns {Player} the player at index number.\n     */\n    getPlayer(id){\n        return this.players[id];\n    }\n\n    /**\n     * Retrieve and edit a player.\n     * @param {number} id the players id number, player one is id: 0.\n     * @param {string} name the players name.\n     */    \n    editPlayer(id, name){\n        let player = this.getPlayer(id);\n        player.name = name;\n    }\n\n    /**\n     * Add and initialize a game round with an empty wheel and board.\n     * @returns {Round} a game round.\n     */\n    addRound(){\n        let id = this.rounds.length;\n        let board = new Board();\n        let wheel = new Wheel(board)\n        let round = new Round(id, wheel, this.players)\n        this.rounds.push(round);\n        return round;\n    }\n\n    /**\n     * Retrieve a game round by id.\n     * @param {Round} id the rounds id number, round one is id: 0\n     */\n    getRound(id){\n        return this.rounds[id];\n    }\n}\n\n// node exports\nif( typeof module !== 'undefined' && module.exports ) {\n    module.exports = {\n        Game: Game,\n        Round: Round,\n        Player: Player,\n        Score: Score\n    }\n}\n",
    "static": true,
    "longname": "/Users/bmw/Documents/education/jhu/EN.605.601.81.SU18 Foundations of Software Engineering/teamvelocity.github.io/scripts/engine.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "randomInt",
    "memberof": "scripts/engine.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/engine.js~randomInt",
    "access": "public",
    "export": false,
    "importPath": "./scripts/engine.js",
    "importStyle": null,
    "description": "Returns a random integer between min and max.",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} random integer."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "max",
        "description": "upper bound (exclusive)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "min",
        "description": "lower bound (inclusive)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "random integer."
    }
  },
  {
    "__docId__": 50,
    "kind": "function",
    "name": "shuffleArray",
    "memberof": "scripts/engine.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/engine.js~shuffleArray",
    "access": "public",
    "export": false,
    "importPath": "./scripts/engine.js",
    "importStyle": null,
    "description": "Naive shuffle an array, swaps random slots 3 * array.length times.",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object[]} shuffled array."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": "an array to shuffle."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object[]"
      ],
      "spread": false,
      "description": "shuffled array."
    }
  },
  {
    "__docId__": 51,
    "kind": "class",
    "name": "Clue",
    "memberof": "scripts/engine.js",
    "static": true,
    "longname": "scripts/engine.js~Clue",
    "access": "public",
    "export": false,
    "importPath": "./scripts/engine.js",
    "importStyle": null,
    "description": "A single clue, zero indexed from the top left of the board.",
    "lineNumber": 39,
    "interface": false
  },
  {
    "__docId__": 52,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/engine.js~Clue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Clue#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "column",
        "description": "horizontal index on board."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "row",
        "description": "vertical index on board."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "question",
        "description": "the question text."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "answer",
        "description": "the answer text."
      }
    ]
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "column",
    "memberof": "scripts/engine.js~Clue",
    "static": false,
    "longname": "scripts/engine.js~Clue#column",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "row",
    "memberof": "scripts/engine.js~Clue",
    "static": false,
    "longname": "scripts/engine.js~Clue#row",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "question",
    "memberof": "scripts/engine.js~Clue",
    "static": false,
    "longname": "scripts/engine.js~Clue#question",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "answer",
    "memberof": "scripts/engine.js~Clue",
    "static": false,
    "longname": "scripts/engine.js~Clue#answer",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "points",
    "memberof": "scripts/engine.js~Clue",
    "static": false,
    "longname": "scripts/engine.js~Clue#points",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 58,
    "kind": "class",
    "name": "Category",
    "memberof": "scripts/engine.js",
    "static": true,
    "longname": "scripts/engine.js~Category",
    "access": "public",
    "export": false,
    "importPath": "./scripts/engine.js",
    "importStyle": null,
    "description": "A category of clues on the board. ",
    "lineNumber": 60,
    "interface": false
  },
  {
    "__docId__": 59,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/engine.js~Category",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Category#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "name of the category."
      }
    ]
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "name",
    "memberof": "scripts/engine.js~Category",
    "static": false,
    "longname": "scripts/engine.js~Category#name",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 61,
    "kind": "member",
    "name": "clues",
    "memberof": "scripts/engine.js~Category",
    "static": false,
    "longname": "scripts/engine.js~Category#clues",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "type": {
      "nullable": null,
      "types": [
        "Object[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "cluesAnswered",
    "memberof": "scripts/engine.js~Category",
    "static": false,
    "longname": "scripts/engine.js~Category#cluesAnswered",
    "access": "public",
    "description": "",
    "lineNumber": 74,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 63,
    "kind": "get",
    "name": "complete",
    "memberof": "scripts/engine.js~Category",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Category#complete",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "reset",
    "memberof": "scripts/engine.js~Category",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Category#reset",
    "access": "public",
    "description": "Reset clues answered count to 0.",
    "lineNumber": 85,
    "params": [],
    "return": null
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "nextClue",
    "memberof": "scripts/engine.js~Category",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Category#nextClue",
    "access": "public",
    "description": "Retrieve next unanswered clue in the category, increment cluesAnswered.\nIf all clues are answered, this will return undefined.",
    "lineNumber": 94,
    "return": {
      "nullable": null,
      "types": [
        "clue"
      ],
      "spread": false,
      "description": "the next unanswered clue."
    },
    "params": []
  },
  {
    "__docId__": 67,
    "kind": "class",
    "name": "Board",
    "memberof": "scripts/engine.js",
    "static": true,
    "longname": "scripts/engine.js~Board",
    "access": "public",
    "export": false,
    "importPath": "./scripts/engine.js",
    "importStyle": null,
    "description": "A WOJ board with column * row clues arranged in a grid. The top left\ncorner is indexed at 0. Each column is a {@link Category} and each row in a \ncategory is a {@link Clue}. All categories must have the same number of \nclues. Each clue in the first row has {@link Board#basePoints}. Each clue in\nthe next row equals the sum of the clue value in the prior row plus \nbasePoints.",
    "lineNumber": 109,
    "interface": false
  },
  {
    "__docId__": 68,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/engine.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Board#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "6",
        "defaultRaw": 6,
        "name": "columns",
        "description": "number of columns on the board."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "5",
        "defaultRaw": 5,
        "name": "rows",
        "description": "number of rows on the board."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "200",
        "defaultRaw": 200,
        "name": "basePoints",
        "description": "point value of each clues in the first \nrow."
      }
    ]
  },
  {
    "__docId__": 69,
    "kind": "member",
    "name": "basePoints",
    "memberof": "scripts/engine.js~Board",
    "static": false,
    "longname": "scripts/engine.js~Board#basePoints",
    "access": "public",
    "description": null,
    "lineNumber": 119,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 70,
    "kind": "member",
    "name": "cluesAnswered",
    "memberof": "scripts/engine.js~Board",
    "static": false,
    "longname": "scripts/engine.js~Board#cluesAnswered",
    "access": "public",
    "description": "",
    "lineNumber": 131,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 71,
    "kind": "get",
    "name": "complete",
    "memberof": "scripts/engine.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Board#complete",
    "access": "public",
    "description": null,
    "lineNumber": 137,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 72,
    "kind": "get",
    "name": "categoryNames",
    "memberof": "scripts/engine.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Board#categoryNames",
    "access": "public",
    "description": "",
    "lineNumber": 144,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "init_",
    "memberof": "scripts/engine.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Board#init_",
    "access": "private",
    "description": "Initializes an empty board of size columns * rows with {@link Clue}'s.",
    "lineNumber": 158,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "columns",
        "description": "number of columns on the board."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rows",
        "description": "number of rows on the board."
      }
    ],
    "return": null
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "categories",
    "memberof": "scripts/engine.js~Board",
    "static": false,
    "longname": "scripts/engine.js~Board#categories",
    "access": "public",
    "description": null,
    "lineNumber": 159,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 75,
    "kind": "member",
    "name": "columns",
    "memberof": "scripts/engine.js~Board",
    "static": false,
    "longname": "scripts/engine.js~Board#columns",
    "access": "public",
    "description": null,
    "lineNumber": 160,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 76,
    "kind": "member",
    "name": "rows",
    "memberof": "scripts/engine.js~Board",
    "static": false,
    "longname": "scripts/engine.js~Board#rows",
    "access": "public",
    "description": null,
    "lineNumber": 161,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "reset",
    "memberof": "scripts/engine.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Board#reset",
    "access": "public",
    "description": "Resets each category in the board and sets cluesAnswered count to 0.",
    "lineNumber": 180,
    "params": [],
    "return": null
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "getCategory",
    "memberof": "scripts/engine.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Board#getCategory",
    "access": "public",
    "description": "Returns a category at the specified column.",
    "lineNumber": 192,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "column",
        "description": "column index of the category."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Category"
      ],
      "spread": false,
      "description": "category at the specified column."
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "getClue",
    "memberof": "scripts/engine.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Board#getClue",
    "access": "public",
    "description": "Returns a clue at the specified column and row.",
    "lineNumber": 202,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "column",
        "description": "column index of the clue."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "row",
        "description": "row index of the clue."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Clue"
      ],
      "spread": false,
      "description": "clue at the specified column and row."
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "editCategory",
    "memberof": "scripts/engine.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Board#editCategory",
    "access": "public",
    "description": "Edit the name of a category at column index.",
    "lineNumber": 211,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "column",
        "description": "column index of the category."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "new category name."
      }
    ],
    "return": null
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "editClue",
    "memberof": "scripts/engine.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Board#editClue",
    "access": "public",
    "description": "Edit the question and answer of a clue at column and row index.",
    "lineNumber": 223,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "column",
        "description": "column index of the clue."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "row",
        "description": "row index of the clue."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "question",
        "description": "new question text."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "answer",
        "description": "new answer text."
      }
    ],
    "return": null
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "nextClue",
    "memberof": "scripts/engine.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Board#nextClue",
    "access": "public",
    "description": "Retrieve next unanswered clue in the category at column and increment\ncluesAnswered. If all clues are answered, this will return undefined.",
    "lineNumber": 235,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "column",
        "description": "column index of the category."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "clue"
      ],
      "spread": false,
      "description": "the next unanswered clue."
    }
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "import",
    "memberof": "scripts/engine.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Board#import",
    "access": "public",
    "description": "Import JSON board, initializing board and setting categories and clues.\nData should be a string. Use JSON.stringify if data is an object literal.",
    "see": [
      "/scripts/data.js"
    ],
    "lineNumber": 261,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "board JSON."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "data.columns",
        "description": "number of columns."
      },
      {
        "nullable": null,
        "types": [
          "numnber"
        ],
        "spread": false,
        "optional": false,
        "name": "data.rows",
        "description": "number of rows."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "data.categories",
        "description": "array of category names."
      },
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "data.clues",
        "description": "array of clues, zero indexed from top left\nof board"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "data.clues.column",
        "description": "column index of the clue."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "data.clues.row",
        "description": "row index of the clue."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "data.clues.question",
        "description": "new question text."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "data.clues.answer",
        "description": "new answer text."
      }
    ],
    "return": null
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "export",
    "memberof": "scripts/engine.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Board#export",
    "access": "public",
    "description": "Export board content to JSON board string. See {@link Board.import} for\ndetails on JSON board structure.",
    "lineNumber": 286,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} serialized board."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "serialized board."
    },
    "params": []
  },
  {
    "__docId__": 86,
    "kind": "class",
    "name": "Spin",
    "memberof": "scripts/engine.js",
    "static": true,
    "longname": "scripts/engine.js~Spin",
    "access": "public",
    "export": false,
    "importPath": "./scripts/engine.js",
    "importStyle": null,
    "description": "Result of a wheel spin.",
    "lineNumber": 312,
    "interface": false
  },
  {
    "__docId__": 87,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/engine.js~Spin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Spin#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 321,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "slot",
        "description": "wheel slot number where spin landed."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "sectorNumber",
        "description": "corresponding sector number located at slot."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sectorName",
        "description": "corresponding sector name located at slot."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isCategory",
        "description": "true if sector is category."
      },
      {
        "nullable": null,
        "types": [
          "Clue"
        ],
        "spread": false,
        "optional": false,
        "name": "clue",
        "description": "if isCategory is true and spinAgain is false, next\nclue in the category."
      }
    ]
  },
  {
    "__docId__": 88,
    "kind": "member",
    "name": "slot",
    "memberof": "scripts/engine.js~Spin",
    "static": false,
    "longname": "scripts/engine.js~Spin#slot",
    "access": "public",
    "description": null,
    "lineNumber": 322,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 89,
    "kind": "member",
    "name": "sectorNumber",
    "memberof": "scripts/engine.js~Spin",
    "static": false,
    "longname": "scripts/engine.js~Spin#sectorNumber",
    "access": "public",
    "description": null,
    "lineNumber": 323,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 90,
    "kind": "member",
    "name": "sectorName",
    "memberof": "scripts/engine.js~Spin",
    "static": false,
    "longname": "scripts/engine.js~Spin#sectorName",
    "access": "public",
    "description": null,
    "lineNumber": 324,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 91,
    "kind": "member",
    "name": "isCategory",
    "memberof": "scripts/engine.js~Spin",
    "static": false,
    "longname": "scripts/engine.js~Spin#isCategory",
    "access": "public",
    "description": null,
    "lineNumber": 325,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 92,
    "kind": "member",
    "name": "clue",
    "memberof": "scripts/engine.js~Spin",
    "static": false,
    "longname": "scripts/engine.js~Spin#clue",
    "access": "public",
    "description": null,
    "lineNumber": 326,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 93,
    "kind": "member",
    "name": "spinAgain",
    "memberof": "scripts/engine.js~Spin",
    "static": false,
    "longname": "scripts/engine.js~Spin#spinAgain",
    "access": "public",
    "description": "",
    "lineNumber": 331,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 94,
    "kind": "class",
    "name": "Wheel",
    "memberof": "scripts/engine.js",
    "static": true,
    "longname": "scripts/engine.js~Wheel",
    "access": "public",
    "export": false,
    "importPath": "./scripts/engine.js",
    "importStyle": null,
    "description": "A WOJ wheel for a specific board and maximum spins. The number of slots on\nthe wheel will be the number of categories + the number of special sectors\n(6). Slots are fixed on the wheel. Each special and category is a sector.\nEach sector can be randomly assigned to a slot on the wheel. Categories are\nalways populated in the sector list first, followed by special sectors, i.e.\ncategory 0 on the board is always sector 0 on the wheel.",
    "lineNumber": 343,
    "interface": false
  },
  {
    "__docId__": 95,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/engine.js~Wheel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Wheel#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 348,
    "params": [
      {
        "nullable": null,
        "types": [
          "Board"
        ],
        "spread": false,
        "optional": false,
        "name": "board",
        "description": "an initialized WOJ board."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "50",
        "defaultRaw": 50,
        "name": "maxSpins",
        "description": "the max spins allowed."
      }
    ]
  },
  {
    "__docId__": 96,
    "kind": "member",
    "name": "board",
    "memberof": "scripts/engine.js~Wheel",
    "static": false,
    "longname": "scripts/engine.js~Wheel#board",
    "access": "public",
    "description": null,
    "lineNumber": 349,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 97,
    "kind": "member",
    "name": "maxSpins",
    "memberof": "scripts/engine.js~Wheel",
    "static": false,
    "longname": "scripts/engine.js~Wheel#maxSpins",
    "access": "public",
    "description": null,
    "lineNumber": 350,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 98,
    "kind": "member",
    "name": "specialSectors",
    "memberof": "scripts/engine.js~Wheel",
    "static": false,
    "longname": "scripts/engine.js~Wheel#specialSectors",
    "access": "public",
    "description": "",
    "lineNumber": 355,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 99,
    "kind": "member",
    "name": "usedSpins",
    "memberof": "scripts/engine.js~Wheel",
    "static": false,
    "longname": "scripts/engine.js~Wheel#usedSpins",
    "access": "public",
    "description": "",
    "lineNumber": 367,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 100,
    "kind": "member",
    "name": "slots",
    "memberof": "scripts/engine.js~Wheel",
    "static": false,
    "longname": "scripts/engine.js~Wheel#slots",
    "access": "public",
    "description": "",
    "lineNumber": 372,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 101,
    "kind": "get",
    "name": "complete",
    "memberof": "scripts/engine.js~Wheel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Wheel#complete",
    "access": "public",
    "description": null,
    "lineNumber": 378,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 102,
    "kind": "get",
    "name": "sectors",
    "memberof": "scripts/engine.js~Wheel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Wheel#sectors",
    "access": "public",
    "description": "",
    "lineNumber": 386,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "reset",
    "memberof": "scripts/engine.js~Wheel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Wheel#reset",
    "access": "public",
    "description": "Resets used spins to 0.",
    "lineNumber": 393,
    "params": [],
    "return": null
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "assignSectors",
    "memberof": "scripts/engine.js~Wheel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Wheel#assignSectors",
    "access": "public",
    "description": "Assigns sectors numbers to each slot ordered by categories then special.",
    "lineNumber": 400,
    "params": [],
    "return": null
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "randomizeSectors",
    "memberof": "scripts/engine.js~Wheel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Wheel#randomizeSectors",
    "access": "public",
    "description": "Randomizes sectors in the slots.",
    "lineNumber": 411,
    "params": [],
    "return": null
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "getSectorNumber",
    "memberof": "scripts/engine.js~Wheel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Wheel#getSectorNumber",
    "access": "public",
    "description": "Get sector number at a specific slot number.",
    "lineNumber": 420,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "slot",
        "description": "slot number in the wheel."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "sector number at the specified slot."
    }
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "getSectorName",
    "memberof": "scripts/engine.js~Wheel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Wheel#getSectorName",
    "access": "public",
    "description": "Get sector name for the specific sector number.",
    "lineNumber": 429,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "sectorNumber",
        "description": "sector number."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "sector name for the sector number."
    }
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "sectorIsCategory",
    "memberof": "scripts/engine.js~Wheel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Wheel#sectorIsCategory",
    "access": "public",
    "description": "Check if the sector is a category (vs a special sector).",
    "lineNumber": 438,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "sectorNumber",
        "description": "number of the sector."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true if the sector is a category."
    }
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "getRandomSlot",
    "memberof": "scripts/engine.js~Wheel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Wheel#getRandomSlot",
    "access": "public",
    "description": "Return a random slot number from the wheel.",
    "lineNumber": 450,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} a random slot number."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "a random slot number."
    },
    "params": []
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "spin",
    "memberof": "scripts/engine.js~Wheel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Wheel#spin",
    "access": "public",
    "description": "Spins the wheel and returns a random sector. Populates the {@link Spin}\nobject with the spin results and depending on the outcome, adjusts points\nor retrieves the next clue.",
    "lineNumber": 460,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Spin} object summarizing result of the spin."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Spin"
      ],
      "spread": false,
      "description": "object summarizing result of the spin."
    },
    "params": []
  },
  {
    "__docId__": 114,
    "kind": "class",
    "name": "Score",
    "memberof": "scripts/engine.js",
    "static": true,
    "longname": "scripts/engine.js~Score",
    "access": "public",
    "export": false,
    "importPath": "./scripts/engine.js",
    "importStyle": null,
    "description": "A score keeper for a single player and round.",
    "lineNumber": 485,
    "interface": false
  },
  {
    "__docId__": 115,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/engine.js~Score",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Score#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 486,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 116,
    "kind": "member",
    "name": "points",
    "memberof": "scripts/engine.js~Score",
    "static": false,
    "longname": "scripts/engine.js~Score#points",
    "access": "public",
    "description": "",
    "lineNumber": 490,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "reset",
    "memberof": "scripts/engine.js~Score",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Score#reset",
    "access": "public",
    "description": "Reset points to 0.",
    "lineNumber": 494,
    "params": [],
    "return": null
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "increase",
    "memberof": "scripts/engine.js~Score",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Score#increase",
    "access": "public",
    "description": "Increase points by a number (sign ignored).",
    "lineNumber": 502,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "points",
        "description": "number of points to increase."
      }
    ],
    "return": null
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "decrease",
    "memberof": "scripts/engine.js~Score",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Score#decrease",
    "access": "public",
    "description": "Decrease points by a number (sign ignored).",
    "lineNumber": 510,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "points",
        "description": "number of points to decrease."
      }
    ],
    "return": null
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "bankrupt",
    "memberof": "scripts/engine.js~Score",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Score#bankrupt",
    "access": "public",
    "description": "If points are positive, set points to 0.",
    "lineNumber": 515,
    "params": [],
    "return": null
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "double",
    "memberof": "scripts/engine.js~Score",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Score#double",
    "access": "public",
    "description": "Double points, even if negative.",
    "lineNumber": 520,
    "params": [],
    "return": null
  },
  {
    "__docId__": 127,
    "kind": "class",
    "name": "Player",
    "memberof": "scripts/engine.js",
    "static": true,
    "longname": "scripts/engine.js~Player",
    "access": "public",
    "export": false,
    "importPath": "./scripts/engine.js",
    "importStyle": null,
    "description": "A player in the WOJ game.",
    "lineNumber": 528,
    "interface": false
  },
  {
    "__docId__": 128,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/engine.js~Player",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Player#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 532,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "the players name."
      }
    ]
  },
  {
    "__docId__": 129,
    "kind": "member",
    "name": "name",
    "memberof": "scripts/engine.js~Player",
    "static": false,
    "longname": "scripts/engine.js~Player#name",
    "access": "public",
    "description": null,
    "lineNumber": 533,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 130,
    "kind": "member",
    "name": "tokens",
    "memberof": "scripts/engine.js~Player",
    "static": false,
    "longname": "scripts/engine.js~Player#tokens",
    "access": "public",
    "description": "",
    "lineNumber": 538,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 131,
    "kind": "member",
    "name": "scores",
    "memberof": "scripts/engine.js~Player",
    "static": false,
    "longname": "scripts/engine.js~Player#scores",
    "access": "public",
    "description": "",
    "lineNumber": 544,
    "type": {
      "nullable": null,
      "types": [
        "Score[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 132,
    "kind": "get",
    "name": "totalScore",
    "memberof": "scripts/engine.js~Player",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Player#totalScore",
    "access": "public",
    "description": null,
    "lineNumber": 548,
    "type": {
      "nullable": null,
      "types": [
        "numbner"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "resetTokens",
    "memberof": "scripts/engine.js~Player",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Player#resetTokens",
    "access": "public",
    "description": "Sets the player's tokens to 0.",
    "lineNumber": 557,
    "params": [],
    "return": null
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "resetScore",
    "memberof": "scripts/engine.js~Player",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Player#resetScore",
    "access": "public",
    "description": " Reset score for round to 0.",
    "lineNumber": 565,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "round",
        "description": "number of the round, 0 is round 1."
      }
    ],
    "return": null
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "getScore",
    "memberof": "scripts/engine.js~Player",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Player#getScore",
    "access": "public",
    "description": "Return the score for a given round number.",
    "lineNumber": 574,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} score for the given round number."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "round",
        "description": "number of the round, 0 is round 1."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "score for the given round number."
    }
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "addToken",
    "memberof": "scripts/engine.js~Player",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Player#addToken",
    "access": "public",
    "description": "Adds 1 token to the player's tokens.",
    "lineNumber": 581,
    "params": [],
    "return": null
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "hasToken",
    "memberof": "scripts/engine.js~Player",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Player#hasToken",
    "access": "public",
    "description": "Checks if the player has any tokens.",
    "lineNumber": 589,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "true if the player has at least one token."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "true if the player has at least one token."
    },
    "params": []
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "useToken",
    "memberof": "scripts/engine.js~Player",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Player#useToken",
    "access": "public",
    "description": "Deduct a token, if the player has one.",
    "lineNumber": 597,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} false if the player does not have a token to use."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "false if the player does not have a token to use."
    },
    "params": []
  },
  {
    "__docId__": 141,
    "kind": "class",
    "name": "Round",
    "memberof": "scripts/engine.js",
    "static": true,
    "longname": "scripts/engine.js~Round",
    "access": "public",
    "export": false,
    "importPath": "./scripts/engine.js",
    "importStyle": null,
    "description": "A round in the WOJ game. The standard game is played with two rounds. The\nround ID must be unique and is used to store and access the round in the\ngames round list.",
    "lineNumber": 613,
    "todo": [
      "fix round id so it is auto-assigned / inked to array index."
    ],
    "interface": false
  },
  {
    "__docId__": 142,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/engine.js~Round",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Round#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 621,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "A unique numeric ID for the round."
      },
      {
        "nullable": null,
        "types": [
          "Wheel"
        ],
        "spread": false,
        "optional": false,
        "name": "wheel",
        "description": "a wheel for the round."
      },
      {
        "nullable": null,
        "types": [
          "Player[]"
        ],
        "spread": false,
        "optional": false,
        "name": "players",
        "description": "an array of players in the game."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "20",
        "defaultRaw": 20,
        "name": "maxTime",
        "description": "maximum time to answer a question in\nseconds."
      }
    ]
  },
  {
    "__docId__": 143,
    "kind": "member",
    "name": "id",
    "memberof": "scripts/engine.js~Round",
    "static": false,
    "longname": "scripts/engine.js~Round#id",
    "access": "public",
    "description": null,
    "lineNumber": 622,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 144,
    "kind": "member",
    "name": "wheel",
    "memberof": "scripts/engine.js~Round",
    "static": false,
    "longname": "scripts/engine.js~Round#wheel",
    "access": "public",
    "description": null,
    "lineNumber": 623,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 145,
    "kind": "member",
    "name": "players",
    "memberof": "scripts/engine.js~Round",
    "static": false,
    "longname": "scripts/engine.js~Round#players",
    "access": "public",
    "description": null,
    "lineNumber": 624,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 146,
    "kind": "member",
    "name": "maxTime",
    "memberof": "scripts/engine.js~Round",
    "static": false,
    "longname": "scripts/engine.js~Round#maxTime",
    "access": "public",
    "description": null,
    "lineNumber": 625,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 147,
    "kind": "member",
    "name": "board",
    "memberof": "scripts/engine.js~Round",
    "static": false,
    "longname": "scripts/engine.js~Round#board",
    "access": "public",
    "description": "",
    "lineNumber": 630,
    "type": {
      "nullable": null,
      "types": [
        "Board"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 148,
    "kind": "member",
    "name": "currentPlayer",
    "memberof": "scripts/engine.js~Round",
    "static": false,
    "longname": "scripts/engine.js~Round#currentPlayer",
    "access": "public",
    "description": "",
    "lineNumber": 635,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 149,
    "kind": "get",
    "name": "complete",
    "memberof": "scripts/engine.js~Round",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Round#complete",
    "access": "public",
    "description": null,
    "lineNumber": 639,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 150,
    "kind": "method",
    "name": "start",
    "memberof": "scripts/engine.js~Round",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Round#start",
    "access": "public",
    "description": "Start the WOJ round.",
    "lineNumber": 646,
    "params": [],
    "return": null
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "reset",
    "memberof": "scripts/engine.js~Round",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Round#reset",
    "access": "public",
    "description": "Resets the current round by reseting the wheel, board, and player scores.",
    "lineNumber": 653,
    "params": [],
    "return": null
  },
  {
    "__docId__": 153,
    "kind": "class",
    "name": "Game",
    "memberof": "scripts/engine.js",
    "static": true,
    "longname": "scripts/engine.js~Game",
    "access": "public",
    "export": false,
    "importPath": "./scripts/engine.js",
    "importStyle": null,
    "description": "The WOJ game. Supports creation of board, wheel, and players which are\nused to track game play. This class should be used to create games and add\nrounds to ensure proper functionality.",
    "examples": [
      "let game = new Game();\n\n// create default boards\nlet data = [data1, data2];\n\nfor(let i=0; i<data.length; i++){\n     let round = game.addRound();\n     round.board.import(JSON.stringify(data[i]));\n     round.wheel.assignSectors();\n     round.wheel.randomizeSectors();    \n}\n\n// edit board content if needed\nround = game.getRound(0);\nlet clue = round.board.getCategory(1).clues[2];\nclue.question = \"What is the oldest soft drink in America?\";\nclue.answer = \"Dr. Pepper.\";\n\n// start game\ngame.addPlayer(\"John\");\ngame.addPlayer(\"Jane\");\n\n// start first round\nround = game.getRound(0);\nround.start();\n\n// player spins\nconsole.log(round.currentPlayer);\nlet spin = round.wheel.spin();\nconsole.log(spin);\nconsole.log(round.complete);"
    ],
    "lineNumber": 701,
    "interface": false
  },
  {
    "__docId__": 154,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/engine.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Game#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 702,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 155,
    "kind": "member",
    "name": "players",
    "memberof": "scripts/engine.js~Game",
    "static": false,
    "longname": "scripts/engine.js~Game#players",
    "access": "public",
    "description": null,
    "lineNumber": 704,
    "type": {
      "nullable": null,
      "types": [
        "Player[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 156,
    "kind": "member",
    "name": "rounds",
    "memberof": "scripts/engine.js~Game",
    "static": false,
    "longname": "scripts/engine.js~Game#rounds",
    "access": "public",
    "description": null,
    "lineNumber": 707,
    "type": {
      "nullable": null,
      "types": [
        "Rounds[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 157,
    "kind": "member",
    "name": "currentRound",
    "memberof": "scripts/engine.js~Game",
    "static": false,
    "longname": "scripts/engine.js~Game#currentRound",
    "access": "public",
    "description": null,
    "lineNumber": 710,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 158,
    "kind": "method",
    "name": "addPlayer",
    "memberof": "scripts/engine.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Game#addPlayer",
    "access": "public",
    "description": "Add a player to the game",
    "lineNumber": 717,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the players name."
      }
    ],
    "return": null
  },
  {
    "__docId__": 159,
    "kind": "method",
    "name": "getPlayer",
    "memberof": "scripts/engine.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Game#getPlayer",
    "access": "public",
    "description": "Retrieve a player.",
    "lineNumber": 727,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Player} the player at index number."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "the players id number, player one is id: 0."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Player"
      ],
      "spread": false,
      "description": "the player at index number."
    }
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "editPlayer",
    "memberof": "scripts/engine.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Game#editPlayer",
    "access": "public",
    "description": "Retrieve and edit a player.",
    "lineNumber": 736,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "the players id number, player one is id: 0."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the players name."
      }
    ],
    "return": null
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "addRound",
    "memberof": "scripts/engine.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Game#addRound",
    "access": "public",
    "description": "Add and initialize a game round with an empty wheel and board.",
    "lineNumber": 745,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Round} a game round."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Round"
      ],
      "spread": false,
      "description": "a game round."
    },
    "params": []
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "getRound",
    "memberof": "scripts/engine.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/engine.js~Game#getRound",
    "access": "public",
    "description": "Retrieve a game round by id.",
    "lineNumber": 758,
    "params": [
      {
        "nullable": null,
        "types": [
          "Round"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "the rounds id number, round one is id: 0"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "file",
    "name": "scripts/ui.js",
    "content": "\"use strict\"\n/**\n * @file UI setup and interaction.\n */\n\n// globals\nlet game;\nlet round;\n\n$(document).ready(function(){\n    // hide setup view\n    $(\".setup\").hide();\n\n    game = new Game();\n\n    // create default boards\n    let data = [data1, data2];\n\n    for(let i=0; i<data.length; i++){\n        let round = game.addRound();\n\n        round.board.import(JSON.stringify(data[i]));\n        round.wheel.assignSectors();\n        round.wheel.randomizeSectors();\n    }\n\n    // edit board content if needed\n    round = game.getRound(0);\n    let clue = round.board.getCategory(1).clues[2];\n    clue.question = \"What is the oldest soft drink in America?\";\n    clue.answer = \"Dr. Pepper.\";\n\n\n    // start game\n    $(\"#btn-play\").click(function(){\n        // store players -- should be adjusted for num of players and default names\n        let playerName = $(\"#player0\").find(\"input\").val();\n        game.addPlayer(playerName);\n    })\n\n    // start first round\n    round = game.getRound(0);\n    round.start();\n\n    // player spins\n    console.log(round.currentPlayer);\n    let spin = round.wheel.spin();\n\n    // animate the wheel\n\n    // display outcome\n    console.log(spin);\n\n    // address outcome\n\n    // check if round is over\n    if(round.complete){\n        // end round\n    }\n  });\n",
    "static": true,
    "longname": "/Users/bmw/Documents/education/jhu/EN.605.601.81.SU18 Foundations of Software Engineering/teamvelocity.github.io/scripts/ui.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "kind": "index",
    "content": "[![Build Status](https://travis-ci.org/TeamVelocity/teamvelocity.github.io.svg?branch=master)](https://travis-ci.org/TeamVelocity/teamvelocity.github.io)\n[![Coverage Status](https://coveralls.io/repos/github/TeamVelocity/teamvelocity.github.io/badge.svg?branch=master)](https://coveralls.io/github/TeamVelocity/teamvelocity.github.io?branch=master)\n\n# teamvelocity.github.io\nSource code for the Wheel of Jeopardy Game developed by Team Velocity.\n\n## Developer Tools\n\n        # install documentation\n        npm install\n\n        # test code, view test coverage, and generate docs\n        npm run test\n        npm run coverage\n        npm run docs\n",
    "longname": "/Users/bmw/Documents/education/jhu/EN.605.601.81.SU18 Foundations of Software Engineering/teamvelocity.github.io/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"scripts\": {\n    \"test\": \"nyc --reporter=html --reporter=text mocha\",\n    \"coverage\": \"nyc report --reporter=text-lcov | coveralls\",\n    \"docs\": \"./node_modules/.bin/esdoc\"\n  },\n  \"devDependencies\": {\n    \"coveralls\": \"^3.0.2\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"mocha\": \"^5.2.0\",\n    \"nyc\": \"^12.0.2\"\n  },\n  \"esdoc\": {\n    \"source\": \"./scripts\",\n    \"destination\": \"./docs\",\n    \"excludes\": \t[\"\\\\.config\\\\.js$\", \"data\\\\.js\"],\n    \"plugins\": [\n      {\n        \"name\": \"esdoc-standard-plugin\",\n        \"option\": {\n          \"undocumentIdentifier\": {\n            \"enable\": false\n          },\n          \"unexportedIdentifier\": {\n            \"enable\": true\n          },\n          \"brand\": {\n            \"logo\": \"assets/logo.png\",\n            \"title\": \"Wheel of Jeopardy\",\n            \"description\": \"The Wheel of Jeopardy Game by Team Velocity\",\n            \"repository\": \"https://github.com/TeamVelocity/teamvelocity.github.io\",\n            \"site\": \"http://teamvelocity.github.io\",\n            \"author\": \"Team Velocity\"\n          }\n        }\n      }\n    ]\n  }\n}\n",
    "longname": "/Users/bmw/Documents/education/jhu/EN.605.601.81.SU18 Foundations of Software Engineering/teamvelocity.github.io/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]